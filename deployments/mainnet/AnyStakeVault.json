{
  "address": "0xDcD7CA4a0feBBF5dcF91499b603c1C073916f9a3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_points",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_anystake",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_regulator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "anystake",
          "type": "address"
        }
      ],
      "name": "AnyStakeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buybackAmount",
          "type": "uint256"
        }
      ],
      "name": "DeFiatBuyback",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "distributionRate",
          "type": "uint256"
        }
      ],
      "name": "DistributionRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "governance",
          "type": "address"
        }
      ],
      "name": "GovernanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "migrator",
          "type": "address"
        }
      ],
      "name": "Migrate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "migrator",
          "type": "address"
        }
      ],
      "name": "MigratorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buybackAmount",
          "type": "uint256"
        }
      ],
      "name": "PointsBuyback",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "points",
          "type": "address"
        }
      ],
      "name": "PointsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "regulator",
          "type": "address"
        }
      ],
      "name": "RegulatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bondedAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bondedLengthBlocks",
          "type": "uint256"
        }
      ],
      "name": "RewardsBonded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "anystakeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "regulatorAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenSweep",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "router",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "weth",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "UniswapUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DeFiatPoints",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DeFiatPointsLp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DeFiatToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DeFiatTokenLp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_blocks",
          "type": "uint256"
        }
      ],
      "name": "addBondedRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "anystake",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bondedRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bondedRewardsBlocksRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bondedRewardsPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyDeFiatWithTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyPointsWithTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calculateRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "distributeRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lpToken",
          "type": "address"
        }
      ],
      "name": "getTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isBlacklistedAdminWithdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastDistributionBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "regulator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_anystake",
          "type": "address"
        }
      ],
      "name": "setAnyStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_distributionRate",
          "type": "uint256"
        }
      ],
      "name": "setDistributionRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_migrator",
          "type": "address"
        }
      ],
      "name": "setMigrator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_points",
          "type": "address"
        }
      ],
      "name": "setPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_regulator",
          "type": "address"
        }
      ],
      "name": "setRegulator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "setUniswap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "sweep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPointsBuybackAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalRewardsDistributed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokenBuybackAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd9be50a83df57e6f1be5424f966396ee653746e3e3889069e4d84361f33fe854",
  "receipt": {
    "to": null,
    "from": "0x4F4B49E7f3661652F13A6D2C86d9Af4435414721",
    "contractAddress": "0xDcD7CA4a0feBBF5dcF91499b603c1C073916f9a3",
    "transactionIndex": 31,
    "gasUsed": "3437876",
    "logsBloom": "0x
    "blockHash": "0xd8ccd7dd413c57d23ebd60fa57009d62361cdf89bf270987aa207fe1c856830f",
    "transactionHash": "0xd9be50a83df57e6f1be5424f966396ee653746e3e3889069e4d84361f33fe854",
    "logs": [
      {
        "transactionIndex": 31,
        "blockNumber": 12175596,
        "transactionHash": "0xd9be50a83df57e6f1be5424f966396ee653746e3e3889069e4d84361f33fe854",
        "address": "0xDcD7CA4a0feBBF5dcF91499b603c1C073916f9a3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004f4b49e7f3661652f13a6d2c86d9af4435414721"
        ],
        "data": "0x",
        "logIndex": 40,
        "blockHash": "0xd8ccd7dd413c57d23ebd60fa57009d62361cdf89bf270987aa207fe1c856830f"
      },
      {
        "transactionIndex": 31,
        "blockNumber": 12175596,
        "transactionHash": "0xd9be50a83df57e6f1be5424f966396ee653746e3e3889069e4d84361f33fe854",
        "address": "0xDcD7CA4a0feBBF5dcF91499b603c1C073916f9a3",
        "topics": [
          "0x434a2db650703b36c824e745330d6397cdaa9ee2cc891a4938ae853e1c50b68d",
          "0x0000000000000000000000004f4b49e7f3661652f13a6d2c86d9af4435414721"
        ],
        "data": "0x000000000000000000000000efccb112270c3c197b86ff03d26340d82a087f6c",
        "logIndex": 41,
        "blockHash": "0xd8ccd7dd413c57d23ebd60fa57009d62361cdf89bf270987aa207fe1c856830f"
      }
    ],
    "blockNumber": 12175596,
    "cumulativeGasUsed": "4907943",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    "0xefcCb112270c3C197b86ff03D26340d82a087F6c",
    "0xDe3E18eCB613498b9a1483Af51394Ec2259BcD0a",
    "0xB6eE603933E024d8d53dDE3faa0bf98fE2a3d6f1",
    "0x95EF77772BdAEF25B56ec5f210e02BdaAc40D144",
    "0xbb10bC5a825F3F6b148bF83ED4b679c88ab27B54"
  ],
  "solcInputHash": "b0d39a7d1d0391dd79e19d0cf1ad0a53",
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_points\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_anystake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_regulator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"anystake\",\"type\":\"address\"}],\"name\":\"AnyStakeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buybackAmount\",\"type\":\"uint256\"}],\"name\":\"DeFiatBuyback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"distributionRate\",\"type\":\"uint256\"}],\"name\":\"DistributionRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"}],\"name\":\"GovernanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"migrator\",\"type\":\"address\"}],\"name\":\"Migrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"migrator\",\"type\":\"address\"}],\"name\":\"MigratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buybackAmount\",\"type\":\"uint256\"}],\"name\":\"PointsBuyback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"points\",\"type\":\"address\"}],\"name\":\"PointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"regulator\",\"type\":\"address\"}],\"name\":\"RegulatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondedLengthBlocks\",\"type\":\"uint256\"}],\"name\":\"RewardsBonded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"anystakeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"regulatorAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenSweep\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"UniswapUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DeFiatPoints\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DeFiatPointsLp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DeFiatToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DeFiatTokenLp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_blocks\",\"type\":\"uint256\"}],\"name\":\"addBondedRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"anystake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondedRewardsBlocksRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondedRewardsPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyDeFiatWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyPointsWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isBlacklistedAdminWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDistributionBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regulator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_anystake\",\"type\":\"address\"}],\"name\":\"setAnyStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_distributionRate\",\"type\":\"uint256\"}],\"name\":\"setDistributionRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_points\",\"type\":\"address\"}],\"name\":\"setPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_regulator\",\"type\":\"address\"}],\"name\":\"setRegulator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setUniswap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPointsBuybackAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardsDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokenBuybackAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/AnyStakeVault.sol\":\"AnyStakeVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":150},\"remappings\":[]},\"sources\":{\"contracts/AnyStakeVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.6.6;\\r\\n\\r\\nimport \\\"./lib/@uniswap/interfaces/IUniswapV2Pair.sol\\\";\\r\\nimport \\\"./interfaces/IAnyStake.sol\\\";\\r\\nimport \\\"./interfaces/IVaultMigrator.sol\\\";\\r\\nimport \\\"./interfaces/IAnyStakeRegulator.sol\\\";\\r\\nimport \\\"./interfaces/IAnyStakeVault.sol\\\";\\r\\nimport \\\"./utils/AnyStakeUtils.sol\\\";\\r\\n\\r\\ncontract AnyStakeVault is IAnyStakeVault, AnyStakeUtils {\\r\\n    using SafeMath for uint256;\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    event AnyStakeUpdated(address indexed user, address anystake);\\r\\n    event RegulatorUpdated(address indexed user, address regulator);\\r\\n    event MigratorUpdated(address indexed user, address migrator);\\r\\n    event DistributionRateUpdated(address indexed user, uint256 distributionRate);\\r\\n    event Migrate(address indexed user, address migrator);\\r\\n    event DeFiatBuyback(address indexed token, uint256 tokenAmount, uint256 buybackAmount);\\r\\n    event PointsBuyback(address indexed token, uint256 tokenAmount, uint256 buybackAmount);\\r\\n    event RewardsDistributed(address indexed user, uint256 anystakeAmount, uint256 regulatorAmount);\\r\\n    event RewardsBonded(address indexed user, uint256 bondedAmount, uint256 bondedLengthBlocks);\\r\\n\\r\\n    address public anystake;\\r\\n    address public regulator;\\r\\n    address public migrator;\\r\\n\\r\\n    uint256 public bondedRewards; // DFT bonded (block-based) rewards\\r\\n    uint256 public bondedRewardsPerBlock; // Amt of bonded DFT paid out each block\\r\\n    uint256 public bondedRewardsBlocksRemaining; // Remaining bonding period\\r\\n    uint256 public distributionRate; // % of rewards which are sent to AnyStake\\r\\n    uint256 public lastDistributionBlock; // last block that rewards were distributed\\r\\n    uint256 public totalTokenBuybackAmount; // total DFT bought back\\r\\n    uint256 public totalPointsBuybackAmount; // total DFTPv2 bought back\\r\\n    uint256 public totalRewardsDistributed; // total rewards distributed from Vault\\r\\n    uint256 public pendingRewards; // total rewards pending claim\\r\\n\\r\\n    modifier onlyAuthorized() {\\r\\n        require(\\r\\n            msg.sender == anystake || msg.sender == regulator, \\r\\n            \\\"Vault: Only AnyStake and Regulator allowed\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    constructor(\\r\\n        address _router, \\r\\n        address _gov, \\r\\n        address _points, \\r\\n        address _token, \\r\\n        address _anystake, \\r\\n        address _regulator\\r\\n    ) \\r\\n        public\\r\\n        AnyStakeUtils(_router, _gov, _points, _token)\\r\\n    {\\r\\n        anystake = _anystake;\\r\\n        regulator = _regulator;\\r\\n        distributionRate = 700; // 70%, base 100\\r\\n    }\\r\\n\\r\\n    // Rewards - Distribute accumulated rewards during pool update\\r\\n    function calculateRewards() external override onlyAuthorized {\\r\\n        if (block.number <= lastDistributionBlock) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        uint256 anystakeAmount;\\r\\n        uint256 regulatorAmount;\\r\\n\\r\\n        // find the transfer fee amount\\r\\n        // fees accumulated = balance - pendingRewards - bondedRewards\\r\\n        uint256 feeAmount = IERC20(DeFiatToken).balanceOf(address(this))\\r\\n            .sub(pendingRewards)\\r\\n            .sub(bondedRewards);\\r\\n        \\r\\n        // calculate fees accumulated since last update\\r\\n        if (feeAmount > 0) {\\r\\n            // find the amounts to distribute to each contract\\r\\n            uint256 anystakeShare = feeAmount.mul(distributionRate).div(1000);\\r\\n            anystakeAmount = anystakeAmount.add(anystakeShare);\\r\\n            regulatorAmount = regulatorAmount.add(feeAmount.sub(anystakeShare));\\r\\n        }\\r\\n\\r\\n        // find the bonded reward amount\\r\\n        if (bondedRewards > 0) {\\r\\n            // find blocks since last bond payout, dont overflow\\r\\n            uint256 blockDelta = block.number.sub(lastDistributionBlock);\\r\\n            if (blockDelta > bondedRewardsBlocksRemaining) {\\r\\n                blockDelta = bondedRewardsBlocksRemaining;\\r\\n            }\\r\\n\\r\\n            // find the bonded amount to payout, dont overflow\\r\\n            uint256 bondedAmount = bondedRewardsPerBlock.mul(blockDelta);\\r\\n            if (bondedAmount > bondedRewards) {\\r\\n                bondedAmount = bondedRewards;\\r\\n            }\\r\\n\\r\\n            // find the amounts to distribute to each contract\\r\\n            uint256 anystakeShare = bondedAmount.mul(distributionRate).div(1000);\\r\\n            anystakeAmount = anystakeAmount.add(anystakeShare);\\r\\n            regulatorAmount = regulatorAmount.add(bondedAmount.sub(anystakeShare));\\r\\n\\r\\n            // update bonded rewards before calc'ing fees\\r\\n            bondedRewards = bondedRewards.sub(bondedAmount);\\r\\n            bondedRewardsBlocksRemaining = bondedRewardsBlocksRemaining.sub(blockDelta);\\r\\n        }\\r\\n\\r\\n        if (anystakeAmount == 0 && regulatorAmount == 0) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (anystakeAmount > 0) {\\r\\n            IAnyStake(anystake).addReward(anystakeAmount);\\r\\n        }\\r\\n\\r\\n        if (regulatorAmount > 0) {\\r\\n            IAnyStakeRegulator(regulator).addReward(regulatorAmount);\\r\\n        }\\r\\n        \\r\\n        lastDistributionBlock = block.number;\\r\\n        pendingRewards = pendingRewards.add(anystakeAmount).add(regulatorAmount);\\r\\n        totalRewardsDistributed = totalRewardsDistributed.add(anystakeAmount).add(regulatorAmount);\\r\\n        emit RewardsDistributed(msg.sender, anystakeAmount, regulatorAmount);\\r\\n    }\\r\\n\\r\\n    function distributeRewards(address recipient, uint256 amount) external override onlyAuthorized {\\r\\n        safeTokenTransfer(recipient, DeFiatToken, amount);\\r\\n        pendingRewards = pendingRewards.sub(amount);\\r\\n    }\\r\\n\\r\\n    // Uniswap - Get token price from Uniswap in ETH\\r\\n    // return is 1e18. max Solidity is 1e77. \\r\\n    function getTokenPrice(address token, address lpToken) public override view returns (uint256) {\\r\\n        if (token == weth) {\\r\\n            return 1e18;\\r\\n        }\\r\\n        \\r\\n        // LP Tokens can be priced with address(0) as lpToken argument\\r\\n        // LP Token pricing is vulerable to flash loan attacks and should not be used in contract calculations\\r\\n        IUniswapV2Pair pair = lpToken == address(0) ? IUniswapV2Pair(token) : IUniswapV2Pair(lpToken);\\r\\n        \\r\\n        uint256 wethReserves;\\r\\n        uint256 tokenReserves;\\r\\n        if (pair.token0() == weth) {\\r\\n            (wethReserves, tokenReserves, ) = pair.getReserves();\\r\\n        } else {\\r\\n            (tokenReserves, wethReserves, ) = pair.getReserves();\\r\\n        }\\r\\n        \\r\\n        if (tokenReserves == 0) {\\r\\n            return 0;\\r\\n        } else if (lpToken == address(0)) {\\r\\n            return wethReserves.mul(2e18).div(IERC20(token).totalSupply());\\r\\n        } else {\\r\\n            uint256 adjuster = 36 - uint256(IERC20(token).decimals());\\r\\n            uint256 tokensPerEth = tokenReserves.mul(10**adjuster).div(wethReserves);\\r\\n            return uint256(1e36).div(tokensPerEth);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Uniswap - Buyback DeFiat Tokens (DFT) from Uniswap with ERC20 tokens\\r\\n    function buyDeFiatWithTokens(address token, uint256 amount) external override onlyAuthorized {\\r\\n        uint256 buybackAmount = buyTokenWithTokens(DeFiatToken, token, amount);\\r\\n\\r\\n        if (buybackAmount > 0) {\\r\\n            totalTokenBuybackAmount = totalTokenBuybackAmount.add(buybackAmount);\\r\\n            emit DeFiatBuyback(token, amount, buybackAmount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Uniswap - Buyback DeFiat Points (DFTP) from Uniswap with ERC20 tokens\\r\\n    function buyPointsWithTokens(address token, uint256 amount) external override onlyAuthorized {\\r\\n        uint256 buybackAmount = buyTokenWithTokens(DeFiatPoints, token, amount);\\r\\n        \\r\\n        if (msg.sender == regulator) {\\r\\n            pendingRewards = pendingRewards.sub(amount);\\r\\n        }\\r\\n\\r\\n        if (buybackAmount > 0) {\\r\\n            totalPointsBuybackAmount = totalPointsBuybackAmount.add(buybackAmount);\\r\\n            emit PointsBuyback(token, amount, buybackAmount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Uniswap - Internal buyback function. Must have a WETH trading pair on Uniswap\\r\\n    function buyTokenWithTokens(address tokenOut, address tokenIn, uint256 amount) internal onlyAuthorized returns (uint256) {\\r\\n        if (amount == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        \\r\\n        address[] memory path = new address[](tokenIn == weth ? 2 : 3);\\r\\n        if (tokenIn == weth) {\\r\\n            path[0] = weth; // WETH in\\r\\n            path[1] = tokenOut; // DFT out\\r\\n        } else {\\r\\n            path[0] = tokenIn; // ERC20 in\\r\\n            path[1] = weth; // WETH intermediary\\r\\n            path[2] = tokenOut; // DFT out\\r\\n        }\\r\\n     \\r\\n        uint256 tokenAmount = IERC20(tokenOut).balanceOf(address(this)); // snapshot\\r\\n        \\r\\n        IERC20(tokenIn).safeApprove(router, 0);\\r\\n        IERC20(tokenIn).safeApprove(router, amount);\\r\\n        IUniswapV2Router02(router).swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n            amount, \\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp + 5 minutes\\r\\n        );\\r\\n\\r\\n        uint256 buybackAmount = IERC20(tokenOut).balanceOf(address(this)).sub(tokenAmount);\\r\\n\\r\\n        return buybackAmount;\\r\\n    }\\r\\n\\r\\n    function migrate() external onlyGovernor {\\r\\n        require(migrator != address(0), \\\"Migrate: No migrator set\\\");\\r\\n\\r\\n        uint256 balance = IERC20(DeFiatToken).balanceOf(address(this));\\r\\n        \\r\\n        // approve and migrate to new vault\\r\\n        // this function will need to maintain the pendingRewards, bondedRewards, lastDistributionBlock\\r\\n        // variables from this contract to ensure users can claim at all times\\r\\n        IERC20(DeFiatToken).safeApprove(migrator, balance);\\r\\n        IVaultMigrator(migrator).migrateTo();\\r\\n        emit Migrate(msg.sender, migrator);\\r\\n    }\\r\\n\\r\\n    // Governance - Add Bonded Rewards, rewards paid out over fixed timeframe\\r\\n    // Used for pre-AnyStake accumulated Treasury rewards and promotions\\r\\n    function addBondedRewards(uint256 _amount, uint256 _blocks) external onlyGovernor {\\r\\n        require(_amount > 0, \\\"AddBondedRewards: Cannot add zero rewards\\\");\\r\\n        require(_blocks > 0, \\\"AddBondedRewards: Cannot have zero block bond\\\");\\r\\n\\r\\n        // Add rewards, add to blocks, re-calculate rewards per block\\r\\n        bondedRewards = bondedRewards.add(_amount);\\r\\n        bondedRewardsBlocksRemaining = bondedRewardsBlocksRemaining.add(_blocks);\\r\\n        bondedRewardsPerBlock = bondedRewards.div(bondedRewardsBlocksRemaining);\\r\\n        lastDistributionBlock = block.number;\\r\\n\\r\\n        IERC20(DeFiatToken).transferFrom(msg.sender, address(this), _amount);\\r\\n        emit RewardsBonded(msg.sender, _amount, _blocks);\\r\\n    }\\r\\n\\r\\n    // Governance - Set AnyStake / Regulator DFT Reward Distribution Rate, 10 = 1%\\r\\n    function setDistributionRate(uint256 _distributionRate) external onlyGovernor {\\r\\n        require(_distributionRate != distributionRate, \\\"SetRate: No rate change\\\");\\r\\n        require(_distributionRate <= 1000, \\\"SetRate: Cannot be greater than 100%\\\");\\r\\n\\r\\n        distributionRate = _distributionRate;\\r\\n        emit DistributionRateUpdated(msg.sender, distributionRate);\\r\\n    }\\r\\n\\r\\n    // Governance - Set Migrator\\r\\n    function setMigrator(address _migrator) external onlyGovernor {\\r\\n        require(_migrator != address(0), \\\"SetMigrator: No migrator change\\\");\\r\\n\\r\\n        migrator = _migrator;\\r\\n        emit MigratorUpdated(msg.sender, _migrator);\\r\\n    }\\r\\n\\r\\n    // Governance - Set AnyStake Address\\r\\n    function setAnyStake(address _anystake) external onlyGovernor {\\r\\n        require(_anystake != anystake, \\\"SetAnyStake: No AnyStake change\\\");\\r\\n        require(_anystake != address(0), \\\"SetAnyStake: Must have AnyStake value\\\");\\r\\n\\r\\n        anystake = _anystake;\\r\\n        emit AnyStakeUpdated(msg.sender, anystake);\\r\\n    }\\r\\n\\r\\n    // Governance - Set Regulator Address\\r\\n    function setRegulator(address _regulator) external onlyGovernor {\\r\\n        require(_regulator != regulator, \\\"SetRegulator: No Regulator change\\\");\\r\\n        require(_regulator != address(0), \\\"SetRegulator: Must have Regulator value\\\");\\r\\n\\r\\n        regulator = _regulator;\\r\\n        emit RegulatorUpdated(msg.sender, regulator);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xcedd235edf47319313fd8e902488826bffee3ee5286545dd18f0d6aeba14f92f\"},\"contracts/interfaces/IAnyStake.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.6.6;\\r\\n\\r\\ninterface IAnyStake {\\r\\n    function addReward(uint256 amount) external;\\r\\n    function claim(uint256 pid) external;\\r\\n    function deposit(uint256 pid, uint256 amount) external;\\r\\n    function withdraw(uint256 pid, uint256 amount) external;\\r\\n}\",\"keccak256\":\"0x9b0598b11bf5a47ad9547c33c29e66e81a507754eaedb9d033f4f0376fff6748\"},\"contracts/interfaces/IAnyStakeRegulator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.6.6;\\r\\n\\r\\ninterface IAnyStakeRegulator {\\r\\n    function addReward(uint256 amount) external;\\r\\n    function claim() external;\\r\\n    function deposit(uint256 amount) external;\\r\\n    function withdraw(uint256 amount) external;\\r\\n    function migrate() external;\\r\\n    function updatePool() external;\\r\\n}\",\"keccak256\":\"0x051d05e61f240deaa19febb530251c0188eb8a5a6bf6d153331f21b2ba5c5268\"},\"contracts/interfaces/IAnyStakeVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.6.6;\\r\\n\\r\\ninterface IAnyStakeVault {\\r\\n    function buyDeFiatWithTokens(address token, uint256 amount) external;\\r\\n    function buyPointsWithTokens(address token, uint256 amount) external;\\r\\n\\r\\n    function calculateRewards() external;\\r\\n    function distributeRewards(address recipient, uint256 amount) external;\\r\\n    function getTokenPrice(address token, address lpToken) external view returns (uint256);\\r\\n}\",\"keccak256\":\"0x1e585f6f27ef3b42f7f12d711b9d78af700db7248ab6390bc80df1e48451d930\"},\"contracts/interfaces/IVaultMigrator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n\\r\\npragma solidity 0.6.6;\\r\\n\\r\\ninterface IVaultMigrator {\\r\\n    function migrateTo() external;\\r\\n}\",\"keccak256\":\"0x9bbe4f34cfadd8d303aba8d554996de2c92a1951ca5ba63f6e8dbf680932d83d\"},\"contracts/lib/@defiat-crypto/interfaces/IDeFiatGov.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.6.6;\\r\\n\\r\\ninterface IDeFiatGov {\\r\\n    function mastermind() external view returns (address);\\r\\n    function viewActorLevelOf(address _address) external view returns (uint256);\\r\\n    function viewFeeDestination() external view returns (address);\\r\\n    function viewTxThreshold() external view returns (uint256);\\r\\n    function viewBurnRate() external view returns (uint256);\\r\\n    function viewFeeRate() external view returns (uint256);\\r\\n}\",\"keccak256\":\"0xc1b0150b388594345e6a4ae8a3aae5604590469c77e2135a9c21f67c2ffae0aa\"},\"contracts/lib/@defiat-crypto/utils/DeFiatGovernedUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.6.6;\\r\\n\\r\\nimport \\\"./DeFiatUtils.sol\\\";\\r\\nimport \\\"../interfaces/IDeFiatGov.sol\\\";\\r\\n\\r\\nabstract contract DeFiatGovernedUtils is DeFiatUtils {\\r\\n    event GovernanceUpdated(address indexed user, address governance);\\r\\n\\r\\n    address public governance;\\r\\n\\r\\n    modifier onlyMastermind {\\r\\n        require(\\r\\n            msg.sender == IDeFiatGov(governance).mastermind() || msg.sender == owner(),\\r\\n            \\\"Gov: Only Mastermind\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyGovernor {\\r\\n        require(\\r\\n            IDeFiatGov(governance).viewActorLevelOf(msg.sender) >= 2 || msg.sender == owner(),\\r\\n            \\\"Gov: Only Governors\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyPartner {\\r\\n        require(\\r\\n            IDeFiatGov(governance).viewActorLevelOf(msg.sender) >= 1 || msg.sender == owner(),\\r\\n            \\\"Gov: Only Partners\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function _setGovernance(address _governance) internal {\\r\\n        require(_governance != governance, \\\"SetGovernance: No governance change\\\");\\r\\n\\r\\n        governance = _governance;\\r\\n        emit GovernanceUpdated(msg.sender, governance);\\r\\n    }\\r\\n\\r\\n    function setGovernance(address _governance) external onlyGovernor {\\r\\n        _setGovernance(_governance);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x4b9a859500a209f52efe61d59ac6f641e2bd33d266c2c591a85d669520b1cbcd\"},\"contracts/lib/@defiat-crypto/utils/DeFiatUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.6.6;\\r\\n\\r\\nimport \\\"../../@openzeppelin/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"../../@openzeppelin/access/Ownable.sol\\\";\\r\\n\\r\\nabstract contract DeFiatUtils is Ownable {\\r\\n    event TokenSweep(address indexed user, address indexed token, uint256 amount);\\r\\n\\r\\n    // Sweep any tokens/ETH accidentally sent or airdropped to the contract\\r\\n    function sweep(address token) public virtual onlyOwner {\\r\\n        uint256 amount = IERC20(token).balanceOf(address(this));\\r\\n        require(amount > 0, \\\"Sweep: No token balance\\\");\\r\\n\\r\\n        IERC20(token).transfer(msg.sender, amount); // use of the ERC20 traditional transfer\\r\\n\\r\\n        if (address(this).balance > 0) {\\r\\n            payable(msg.sender).transfer(address(this).balance);\\r\\n        }\\r\\n\\r\\n        emit TokenSweep(msg.sender, token, amount);\\r\\n    }\\r\\n\\r\\n    // Self-Destruct contract to free space on-chain, sweep any ETH to owner\\r\\n    function kill() external onlyOwner {\\r\\n        selfdestruct(payable(msg.sender));\\r\\n    }\\r\\n}\",\"keccak256\":\"0x442c30bc18cf99893d6ad9fd0c0431d22a33f221e82e00d83a98178b53871751\"},\"contracts/lib/@openzeppelin/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.6.0 <0.8.0;\\r\\n\\r\\nimport \\\"../utils/Context.sol\\\";\\r\\n\\r\\nabstract contract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () internal {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf5680940d881f96f6517e8a3be14c061e1e04b31dba60bb4f9d7eb307912decd\"},\"contracts/lib/@openzeppelin/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.6.0 <0.8.0;\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x9a028be326fdef37870429a7605381fd0121309a329b1b022c3ddd32937a6405\"},\"contracts/lib/@openzeppelin/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.6.0 <0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function symbol() external view returns (string memory);\\r\\n    function decimals() external view returns (uint8);\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    // Standard\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\",\"keccak256\":\"0xb6da31dc31ae7de4cb63f33a84a852f2253794cc68940570ac6ab918a30e0d4d\"},\"contracts/lib/@openzeppelin/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.6.0 <0.8.0;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\nimport \\\"../../math/SafeMath.sol\\\";\\r\\nimport \\\"../../utils/Address.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title SafeERC20\\r\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\r\\n * contract returns false). Tokens that return no value (and instead revert or\\r\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\r\\n * successful.\\r\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\r\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\r\\n */\\r\\nlibrary SafeERC20 {\\r\\n    using SafeMath for uint256;\\r\\n    using Address for address;\\r\\n\\r\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Deprecated. This function has issues similar to the ones found in\\r\\n     * {IERC20-approve}, and its usage is discouraged.\\r\\n     *\\r\\n     * Whenever possible, use {safeIncreaseAllowance} and\\r\\n     * {safeDecreaseAllowance} instead.\\r\\n     */\\r\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\r\\n        // safeApprove should only be called when setting an initial allowance,\\r\\n        // or when resetting it to zero. To increase and decrease it, use\\r\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\r\\n        // solhint-disable-next-line max-line-length\\r\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\r\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\r\\n        );\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\r\\n    }\\r\\n\\r\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\r\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\r\\n    }\\r\\n\\r\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\r\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\r\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\r\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\r\\n     * @param token The token targeted by the call.\\r\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\r\\n     */\\r\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\r\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\r\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\r\\n        // the target address contains contract code and also asserts for success in the low-level call.\\r\\n\\r\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\r\\n        if (returndata.length > 0) { // Return data is optional\\r\\n            // solhint-disable-next-line max-line-length\\r\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0x50834726ef9e9855da4dcef99303139e5c730e46448eeb56a40f9eb22396dea7\"},\"contracts/lib/@openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.6.2;\\r\\n\\r\\n/**\\r\\n * @dev Collection of functions related to the address type\\r\\n */\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // This method relies on extcodesize, which returns 0 for contracts in\\r\\n        // construction, since the code is only stored at the end of the\\r\\n        // constructor execution.\\r\\n\\r\\n        uint256 size;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly { size := extcodesize(account) }\\r\\n        return size > 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\r\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\r\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain`call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\r\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\r\\n        return _verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\r\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\r\\n        return _verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\r\\n        return _verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                // solhint-disable-next-line no-inline-assembly\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9bb2def599742676e174be012a0259ab14bf9990c7a6a41bf61edcd6864d88c2\"},\"contracts/lib/@openzeppelin/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.6.6;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address payable) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa1c8840b5f3767cdd6f3ae92ad5800d0a3578dc27bee9da0204f34c5ae7e89f7\"},\"contracts/lib/@uniswap/interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xa82d644ca51383c737963d7f11ca0ee1a0e8e77a14306ef3fe215e125dc3b880\"},\"contracts/lib/@uniswap/interfaces/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x0f3ce5f31d75c25f6d441917fef49c5d0dfbe918be42175e4613381d5f090eaa\"},\"contracts/lib/@uniswap/interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0xb0f0a9e1bfa3a5f66128964038451692ed3683dc741f43262d9bd8b791b8ea64\"},\"contracts/lib/@uniswap/interfaces/IUniswapV2Router02.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6a5985605b2462d3bc99a92de2843c236ceeeae09cf77c8b9b89ef0b28dc36e6\"},\"contracts/utils/AnyStakeUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.6.6;\\r\\n\\r\\nimport \\\"../lib/@defiat-crypto/utils/DeFiatUtils.sol\\\";\\r\\nimport \\\"../lib/@defiat-crypto/utils/DeFiatGovernedUtils.sol\\\";\\r\\nimport \\\"../lib/@openzeppelin/token/ERC20/SafeERC20.sol\\\";\\r\\nimport \\\"../lib/@uniswap/interfaces/IUniswapV2Factory.sol\\\";\\r\\nimport \\\"../lib/@uniswap/interfaces/IUniswapV2Router02.sol\\\";\\r\\n\\r\\nabstract contract AnyStakeUtils is DeFiatGovernedUtils {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    event PointsUpdated(address indexed user, address points);\\r\\n    event TokenUpdated(address indexed user, address token);\\r\\n    event UniswapUpdated(address indexed user, address router, address weth, address factory);\\r\\n  \\r\\n    address public router;\\r\\n    address public factory;\\r\\n    address public weth;\\r\\n    address public DeFiatToken;\\r\\n    address public DeFiatPoints;\\r\\n    address public DeFiatTokenLp;\\r\\n    address public DeFiatPointsLp;\\r\\n\\r\\n    mapping (address => bool) internal _blacklistedAdminWithdraw;\\r\\n\\r\\n    constructor(address _router, address _gov, address _points, address _token) public {\\r\\n        _setGovernance(_gov);\\r\\n\\r\\n        router = _router;\\r\\n        DeFiatPoints = _points;\\r\\n        DeFiatToken = _token;\\r\\n         \\r\\n        weth = IUniswapV2Router02(router).WETH();\\r\\n        factory = IUniswapV2Router02(router).factory();\\r\\n        DeFiatTokenLp = IUniswapV2Factory(factory).getPair(_token, weth);\\r\\n        DeFiatPointsLp = IUniswapV2Factory(factory).getPair(_points, weth);\\r\\n    }\\r\\n\\r\\n    function sweep(address _token) public override onlyOwner {\\r\\n        require(!_blacklistedAdminWithdraw[_token], \\\"Sweep: Cannot withdraw blacklisted token\\\");\\r\\n\\r\\n        DeFiatUtils.sweep(_token);\\r\\n    }\\r\\n\\r\\n    function isBlacklistedAdminWithdraw(address _token)\\r\\n        external\\r\\n        view\\r\\n        returns (bool)\\r\\n    {\\r\\n        return _blacklistedAdminWithdraw[_token];\\r\\n    }\\r\\n\\r\\n    // Method to avoid underflow on token transfers\\r\\n    function safeTokenTransfer(address user, address token, uint256 amount) internal {\\r\\n        if (amount == 0) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        uint256 tokenBalance = IERC20(token).balanceOf(address(this));\\r\\n        if (amount > tokenBalance) {\\r\\n            IERC20(token).safeTransfer(user, tokenBalance);\\r\\n        } else {\\r\\n            IERC20(token).safeTransfer(user, amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setToken(address _token) external onlyGovernor {\\r\\n        require(_token != DeFiatToken, \\\"SetToken: No token change\\\");\\r\\n        require(_token != address(0), \\\"SetToken: Must set token value\\\");\\r\\n\\r\\n        DeFiatToken = _token;\\r\\n        DeFiatTokenLp = IUniswapV2Factory(factory).getPair(_token, weth);\\r\\n        emit TokenUpdated(msg.sender, DeFiatToken);\\r\\n    }\\r\\n\\r\\n    function setPoints(address _points) external onlyGovernor {\\r\\n        require(_points != DeFiatPoints, \\\"SetPoints: No points change\\\");\\r\\n        require(_points != address(0), \\\"SetPoints: Must set points value\\\");\\r\\n\\r\\n        DeFiatPoints = _points;\\r\\n        DeFiatPointsLp = IUniswapV2Factory(factory).getPair(_points, weth);\\r\\n        emit PointsUpdated(msg.sender, DeFiatPoints);\\r\\n    }\\r\\n\\r\\n    function setUniswap(address _router) external onlyGovernor {\\r\\n        require(_router != router, \\\"SetUniswap: No uniswap change\\\");\\r\\n        require(_router != address(0), \\\"SetUniswap: Must set uniswap value\\\");\\r\\n\\r\\n        router = _router;\\r\\n        weth = IUniswapV2Router02(router).WETH();\\r\\n        factory = IUniswapV2Router02(router).factory();\\r\\n        emit UniswapUpdated(msg.sender, router, weth, factory);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf0cb6c837e03a2f93ac6e5028483cbcdbbcf611b65c76c0fdb33b208276d7546\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003c7e38038062003c7e833981810160405260c08110156200003757600080fd5b508051602082015160408301516060840151608085015160a0909501519394929391929091858585856000620000756001600160e01b036200038e16565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350620000d3836001600160e01b036200039216565b600280546001600160a01b038087166001600160a01b031992831617928390556006805486831690841617905560058054858316931692909217909155604080516315ab88c960e31b81529051929091169163ad5c464891600480820192602092909190829003018186803b1580156200014c57600080fd5b505afa15801562000161573d6000803e3d6000fd5b505050506040513d60208110156200017857600080fd5b5051600480546001600160a01b0319166001600160a01b039283161781556002546040805163c45a015560e01b81529051919093169263c45a01559281810192602092909190829003018186803b158015620001d357600080fd5b505afa158015620001e8573d6000803e3d6000fd5b505050506040513d6020811015620001ff57600080fd5b5051600380546001600160a01b0319166001600160a01b039283161790819055600480546040805163e6a4390560e01b815286861693810193909352908416602483015251919092169163e6a43905916044808301926020929190829003018186803b1580156200026f57600080fd5b505afa15801562000284573d6000803e3d6000fd5b505050506040513d60208110156200029b57600080fd5b5051600780546001600160a01b0319166001600160a01b03928316179055600354600480546040805163e6a4390560e01b815287861693810193909352908416602483015251919092169163e6a43905916044808301926020929190829003018186803b1580156200030c57600080fd5b505afa15801562000321573d6000803e3d6000fd5b505050506040513d60208110156200033857600080fd5b5051600880546001600160a01b03199081166001600160a01b0393841617909155600a8054821698831698909817909755600b805490971695169490941790945550506102bc601055506200043f945050505050565b3390565b6001546001600160a01b0382811691161415620003e15760405162461bcd60e51b815260040180806020018281038252602381526020018062003c5b6023913960400191505060405180910390fd5b600180546001600160a01b038084166001600160a01b03199092169190911791829055604080519290911682525133917f434a2db650703b36c824e745330d6397cdaa9ee2cc891a4938ae853e1c50b68d919081900360200190a250565b61380c806200044f6000396000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c80638efecdda11610146578063c55c0c34116100c3578063eded3fda11610087578063eded3fda14610584578063ee1725461461058c578063f2bc79a314610594578063f2fde38b1461059c578063f887ea40146105c2578063fdcc7b08146105ca57610253565b8063c55c0c341461051a578063cde0a4f814610522578063d3917cd514610548578063d42e125414610550578063dd8fee141461057c57610253565b8063ab033ea91161010a578063ab033ea9146104ae578063afa99860146104d4578063b2d6b00414610502578063b5673f041461050a578063c45a01551461051257610253565b80638efecdda146104265780638fd3ab801461044c578063917f9737146104545780639f25cde71461045c578063a8031a1d1461048257610253565b806341c0e1b5116101d45780635aa6e675116101985780635aa6e675146103e0578063715018a6146103e85780637bef5a92146103f05780637cd07e47146104165780638da5cb5b1461041e57610253565b806341c0e1b514610379578063460d48a014610381578063463d7ac3146103ad5780634ad83dd7146103b5578063521adaf5146103d857610253565b806321603e8b1161021b57806321603e8b146102e557806323cf31181461031f57806337710aca146103455780633e50de30146103695780633fc8cef31461037157610253565b806301681a621461025857806302cb6b7f14610280578063039f3c981461029a578063144fa6d7146102a257806319983251146102c8575b600080fd5b61027e6004803603602081101561026e57600080fd5b50356001600160a01b03166105d2565b005b61028861068e565b60408051918252519081900360200190f35b610288610694565b61027e600480360360208110156102b857600080fd5b50356001600160a01b031661069a565b61027e600480360360208110156102de57600080fd5b5035610929565b61030b600480360360208110156102fb57600080fd5b50356001600160a01b0316610ad4565b604080519115158252519081900360200190f35b61027e6004803603602081101561033557600080fd5b50356001600160a01b0316610af2565b61034d610c7f565b604080516001600160a01b039092168252519081900360200190f35b61027e610c8e565b61034d61105c565b61027e61106b565b61027e6004803603604081101561039757600080fd5b506001600160a01b0381351690602001356110c6565b61034d6111a5565b61027e600480360360408110156103cb57600080fd5b50803590602001356111b4565b610288611418565b61034d61141e565b61027e61142d565b61027e6004803603602081101561040657600080fd5b50356001600160a01b03166114cf565b61034d6116b0565b61034d6116bf565b61027e6004803603602081101561043c57600080fd5b50356001600160a01b03166116ce565b61027e6119cd565b61034d611c4b565b61027e6004803603602081101561047257600080fd5b50356001600160a01b0316611c5a565b61027e6004803603604081101561049857600080fd5b506001600160a01b038135169060200135611ee9565b61027e600480360360208110156104c457600080fd5b50356001600160a01b0316611f79565b610288600480360360408110156104ea57600080fd5b506001600160a01b038135811691602001351661205d565b610288612395565b61028861239b565b61034d6123a1565b6102886123b0565b61027e6004803603602081101561053857600080fd5b50356001600160a01b03166123b6565b61034d612581565b61027e6004803603604081101561056657600080fd5b506001600160a01b038135169060200135612590565b61034d612699565b6102886126a8565b6102886126ae565b6102886126b4565b61027e600480360360208110156105b257600080fd5b50356001600160a01b03166126ba565b61034d6127b2565b61034d6127c1565b6105da6127d0565b6000546001600160a01b0390811691161461062a576040805162461bcd60e51b8152602060048201819052602482015260008051602061364f833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526009602052604090205460ff16156106825760405162461bcd60e51b81526004018080602001828103825260288152602001806136986028913960400191505060405180910390fd5b61068b816127d4565b50565b60105481565b600f5481565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b1580156106e557600080fd5b505afa1580156106f9573d6000803e3d6000fd5b505050506040513d602081101561070f57600080fd5b505110158061073657506107216116bf565b6001600160a01b0316336001600160a01b0316145b610775576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b6005546001600160a01b03828116911614156107d8576040805162461bcd60e51b815260206004820152601960248201527f536574546f6b656e3a204e6f20746f6b656e206368616e676500000000000000604482015290519081900360640190fd5b6001600160a01b038116610833576040805162461bcd60e51b815260206004820152601e60248201527f536574546f6b656e3a204d7573742073657420746f6b656e2076616c75650000604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b03838116918217909255600354600480546040805163e6a4390560e01b81529283019490945284166024820152915192169163e6a4390591604480820192602092909190829003018186803b1580156108a057600080fd5b505afa1580156108b4573d6000803e3d6000fd5b505050506040513d60208110156108ca57600080fd5b5051600780546001600160a01b039283166001600160a01b031990911617905560055460408051919092168152905133917f0b1186973f810894b87ab0bfbee422fddcaad21b46dc705a561451bbb6bac117919081900360200190a250565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b15801561097457600080fd5b505afa158015610988573d6000803e3d6000fd5b505050506040513d602081101561099e57600080fd5b50511015806109c557506109b06116bf565b6001600160a01b0316336001600160a01b0316145b610a04576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b601054811415610a55576040805162461bcd60e51b8152602060048201526017602482015276536574526174653a204e6f2072617465206368616e676560481b604482015290519081900360640190fd5b6103e8811115610a965760405162461bcd60e51b815260040180806020018281038252602481526020018061375d6024913960400191505060405180910390fd5b601081905560408051828152905133917f795d76dc4b36dc1b4d2a9a512fd59efc329dc639f747c5355cc50c7fad7a9ef2919081900360200190a250565b6001600160a01b031660009081526009602052604090205460ff1690565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b158015610b3d57600080fd5b505afa158015610b51573d6000803e3d6000fd5b505050506040513d6020811015610b6757600080fd5b5051101580610b8e5750610b796116bf565b6001600160a01b0316336001600160a01b0316145b610bcd576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b6001600160a01b038116610c28576040805162461bcd60e51b815260206004820152601f60248201527f5365744d69677261746f723a204e6f206d69677261746f72206368616e676500604482015290519081900360640190fd5b600c80546001600160a01b0383166001600160a01b03199091168117909155604080519182525133917f17356f011fa307735bd27bcbcd4ee385789d5155c6e44c093a1936e387f62ae5919081900360200190a250565b6005546001600160a01b031681565b600a546001600160a01b0316331480610cb15750600b546001600160a01b031633145b610cec5760405162461bcd60e51b815260040180806020018281038252602a8152602001806136c0602a913960400191505060405180910390fd5b6011544311610cfa5761105a565b600d54601554600554604080516370a0823160e01b8152306004820152905160009485948594610d9f949293610d93936001600160a01b03909216916370a08231916024808301926020929190829003018186803b158015610d5b57600080fd5b505afa158015610d6f573d6000803e3d6000fd5b505050506040513d6020811015610d8557600080fd5b50519063ffffffff6129e316565b9063ffffffff6129e316565b90508015610e08576000610dd06103e8610dc460105485612a2c90919063ffffffff16565b9063ffffffff612a8516565b9050610de2848263ffffffff612ac716565b9350610e04610df7838363ffffffff6129e316565b849063ffffffff612ac716565b9250505b600d5415610ee3576000610e27601154436129e390919063ffffffff16565b9050600f54811115610e385750600f545b600e54600090610e4e908363ffffffff612a2c16565b9050600d54811115610e5f5750600d545b6000610e7c6103e8610dc460105485612a2c90919063ffffffff16565b9050610e8e868263ffffffff612ac716565b9550610eb0610ea3838363ffffffff6129e316565b869063ffffffff612ac716565b600d54909550610ec6908363ffffffff6129e316565b600d55600f54610edc908463ffffffff6129e316565b600f555050505b82158015610eef575081155b15610efc5750505061105a565b8215610f6857600a5460408051631d3793b160e21b81526004810186905290516001600160a01b03909216916374de4ec49160248082019260009290919082900301818387803b158015610f4f57600080fd5b505af1158015610f63573d6000803e3d6000fd5b505050505b8115610fd457600b5460408051631d3793b160e21b81526004810185905290516001600160a01b03909216916374de4ec49160248082019260009290919082900301818387803b158015610fbb57600080fd5b505af1158015610fcf573d6000803e3d6000fd5b505050505b43601155601554610ffd908390610ff1908663ffffffff612ac716565b9063ffffffff612ac716565b601555601454611019908390610ff1908663ffffffff612ac716565b6014556040805184815260208101849052815133927fe4e801442ed461792c0bdfa7f5c25444d391d67d68422437bd9005796c67cb23928290030190a25050505b565b6004546001600160a01b031681565b6110736127d0565b6000546001600160a01b039081169116146110c3576040805162461bcd60e51b8152602060048201819052602482015260008051602061364f833981519152604482015290519081900360640190fd5b33ff5b600a546001600160a01b03163314806110e95750600b546001600160a01b031633145b6111245760405162461bcd60e51b815260040180806020018281038252602a8152602001806136c0602a913960400191505060405180910390fd5b60055460009061113e906001600160a01b03168484612b21565b905080156111a057601254611159908263ffffffff612ac716565b601255604080518381526020810183905281516001600160a01b038616927f8c4b0799b6ce686b2d7a9e4d004a11a6cdddf122720ad6663cefe13a25b66c0a928290030190a25b505050565b6008546001600160a01b031681565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b1580156111ff57600080fd5b505afa158015611213573d6000803e3d6000fd5b505050506040513d602081101561122957600080fd5b5051101580611250575061123b6116bf565b6001600160a01b0316336001600160a01b0316145b61128f576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b600082116112ce5760405162461bcd60e51b815260040180806020018281038252602981526020018061366f6029913960400191505060405180910390fd5b6000811161130d5760405162461bcd60e51b815260040180806020018281038252602d815260200180613622602d913960400191505060405180910390fd5b600d54611320908363ffffffff612ac716565b600d55600f54611336908263ffffffff612ac716565b600f819055600d5461134d9163ffffffff612a8516565b600e5543601155600554604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156113ae57600080fd5b505af11580156113c2573d6000803e3d6000fd5b505050506040513d60208110156113d857600080fd5b50506040805183815260208101839052815133927f029435536d4df0bc1b6615a8ed651f37237d6a5ffb3d7dcea44a2d4dd93c3bcb928290030190a25050565b600d5481565b6001546001600160a01b031681565b6114356127d0565b6000546001600160a01b03908116911614611485576040805162461bcd60e51b8152602060048201819052602482015260008051602061364f833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b15801561151a57600080fd5b505afa15801561152e573d6000803e3d6000fd5b505050506040513d602081101561154457600080fd5b505110158061156b57506115566116bf565b6001600160a01b0316336001600160a01b0316145b6115aa576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b600a546001600160a01b038281169116141561160d576040805162461bcd60e51b815260206004820152601f60248201527f536574416e795374616b653a204e6f20416e795374616b65206368616e676500604482015290519081900360640190fd5b6001600160a01b0381166116525760405162461bcd60e51b81526004018080602001828103825260258152602001806135dc6025913960400191505060405180910390fd5b600a80546001600160a01b038084166001600160a01b03199092169190911791829055604080519290911682525133917fd969078c09d4ed45c51e02eab46ee56dc0ccd5744bfb8c726ee7d2d58883df71919081900360200190a250565b600c546001600160a01b031681565b6000546001600160a01b031690565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b15801561171957600080fd5b505afa15801561172d573d6000803e3d6000fd5b505050506040513d602081101561174357600080fd5b505110158061176a57506117556116bf565b6001600160a01b0316336001600160a01b0316145b6117a9576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b6002546001600160a01b038281169116141561180c576040805162461bcd60e51b815260206004820152601d60248201527f536574556e69737761703a204e6f20756e6973776170206368616e6765000000604482015290519081900360640190fd5b6001600160a01b0381166118515760405162461bcd60e51b815260040180806020018281038252602281526020018061373b6022913960400191505060405180910390fd5b600280546001600160a01b0319166001600160a01b038381169190911791829055604080516315ab88c960e31b81529051929091169163ad5c464891600480820192602092909190829003018186803b1580156118ad57600080fd5b505afa1580156118c1573d6000803e3d6000fd5b505050506040513d60208110156118d757600080fd5b5051600480546001600160a01b0319166001600160a01b039283161781556002546040805163c45a015560e01b81529051919093169263c45a01559281810192602092909190829003018186803b15801561193157600080fd5b505afa158015611945573d6000803e3d6000fd5b505050506040513d602081101561195b57600080fd5b5051600380546001600160a01b039283166001600160a01b03199091161790819055600254600454604080519285168352908416602083015291909216828201525133917f0cded593bf24267de84b7b3800bf9eb31ddb3c449fff75a64b1232bb7738d6df919081900360600190a250565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b158015611a1857600080fd5b505afa158015611a2c573d6000803e3d6000fd5b505050506040513d6020811015611a4257600080fd5b5051101580611a695750611a546116bf565b6001600160a01b0316336001600160a01b0316145b611aa8576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b600c546001600160a01b0316611b00576040805162461bcd60e51b8152602060048201526018602482015277135a59dc985d194e88139bc81b5a59dc985d1bdc881cd95d60421b604482015290519081900360640190fd5b600554604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611b4b57600080fd5b505afa158015611b5f573d6000803e3d6000fd5b505050506040513d6020811015611b7557600080fd5b5051600c54600554919250611b9d916001600160a01b0390811691168363ffffffff612ef116565b600c60009054906101000a90046001600160a01b03166001600160a01b03166398c6e7606040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611bed57600080fd5b505af1158015611c01573d6000803e3d6000fd5b5050600c54604080516001600160a01b03929092168252513393507f2a05bb717043f3a794e94382bf63f2e275ecafc41be9b63c34f16d58da9822ca92509081900360200190a250565b6006546001600160a01b031681565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b158015611ca557600080fd5b505afa158015611cb9573d6000803e3d6000fd5b505050506040513d6020811015611ccf57600080fd5b5051101580611cf65750611ce16116bf565b6001600160a01b0316336001600160a01b0316145b611d35576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b6006546001600160a01b0382811691161415611d98576040805162461bcd60e51b815260206004820152601b60248201527f536574506f696e74733a204e6f20706f696e7473206368616e67650000000000604482015290519081900360640190fd5b6001600160a01b038116611df3576040805162461bcd60e51b815260206004820181905260248201527f536574506f696e74733a204d7573742073657420706f696e74732076616c7565604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b03838116918217909255600354600480546040805163e6a4390560e01b81529283019490945284166024820152915192169163e6a4390591604480820192602092909190829003018186803b158015611e6057600080fd5b505afa158015611e74573d6000803e3d6000fd5b505050506040513d6020811015611e8a57600080fd5b5051600880546001600160a01b039283166001600160a01b031990911617905560065460408051919092168152905133917f51a2b49da00e06b51910260db68d6491809bb5755e305a6f469fb89e8b5e99d5919081900360200190a250565b600a546001600160a01b0316331480611f0c5750600b546001600160a01b031633145b611f475760405162461bcd60e51b815260040180806020018281038252602a8152602001806136c0602a913960400191505060405180910390fd5b600554611f5f9083906001600160a01b031683613004565b601554611f72908263ffffffff6129e316565b6015555050565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b158015611fc457600080fd5b505afa158015611fd8573d6000803e3d6000fd5b505050506040513d6020811015611fee57600080fd5b505110158061201557506120006116bf565b6001600160a01b0316336001600160a01b0316145b612054576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b61068b816130cd565b6004546000906001600160a01b03848116911614156120855750670de0b6b3a764000061238f565b60006001600160a01b0383161561209c578261209e565b835b9050600080600460009054906101000a90046001600160a01b03166001600160a01b0316836001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156120fb57600080fd5b505afa15801561210f573d6000803e3d6000fd5b505050506040513d602081101561212557600080fd5b50516001600160a01b031614156121b757826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561216f57600080fd5b505afa158015612183573d6000803e3d6000fd5b505050506040513d606081101561219957600080fd5b5080516020909101516001600160701b039182169350169050612234565b826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156121f057600080fd5b505afa158015612204573d6000803e3d6000fd5b505050506040513d606081101561221a57600080fd5b5080516020909101516001600160701b0390811693501690505b80612245576000935050505061238f565b6001600160a01b0385166122dd576122d3866001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561228f57600080fd5b505afa1580156122a3573d6000803e3d6000fd5b505050506040513d60208110156122b957600080fd5b5051610dc484671bc16d674ec8000063ffffffff612a2c16565b935050505061238f565b6000866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561231857600080fd5b505afa15801561232c573d6000803e3d6000fd5b505050506040513d602081101561234257600080fd5b505160ff166024039050600061236684610dc485600a86900a63ffffffff612a2c16565b90506123876ec097ce7bc90715b34b9f10000000008263ffffffff612a8516565b955050505050505b92915050565b60125481565b60135481565b6003546001600160a01b031681565b600e5481565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b15801561240157600080fd5b505afa158015612415573d6000803e3d6000fd5b505050506040513d602081101561242b57600080fd5b5051101580612452575061243d6116bf565b6001600160a01b0316336001600160a01b0316145b612491576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b600b546001600160a01b03828116911614156124de5760405162461bcd60e51b81526004018080602001828103825260218152602001806135956021913960400191505060405180910390fd5b6001600160a01b0381166125235760405162461bcd60e51b81526004018080602001828103825260278152602001806136ea6027913960400191505060405180910390fd5b600b80546001600160a01b038084166001600160a01b03199092169190911791829055604080519290911682525133917ff489dcedf765e00963d6c13903d580a27ea806656ce92cd0e731bf4a902f5caf919081900360200190a250565b600a546001600160a01b031681565b600a546001600160a01b03163314806125b35750600b546001600160a01b031633145b6125ee5760405162461bcd60e51b815260040180806020018281038252602a8152602001806136c0602a913960400191505060405180910390fd5b600654600090612608906001600160a01b03168484612b21565b600b549091506001600160a01b031633141561263557601554612631908363ffffffff6129e316565b6015555b80156111a05760135461264e908263ffffffff612ac716565b601355604080518381526020810183905281516001600160a01b038616927f269e523b6b004ceb6676e631e6a7f39a9563dce786272ca120df34860c030081928290030190a2505050565b600b546001600160a01b031681565b60155481565b60145481565b60115481565b6126c26127d0565b6000546001600160a01b03908116911614612712576040805162461bcd60e51b8152602060048201819052602482015260008051602061364f833981519152604482015290519081900360640190fd5b6001600160a01b0381166127575760405162461bcd60e51b815260040180806020018281038252602681526020018061354c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031681565b6007546001600160a01b031681565b3390565b6127dc6127d0565b6000546001600160a01b0390811691161461282c576040805162461bcd60e51b8152602060048201819052602482015260008051602061364f833981519152604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b15801561287657600080fd5b505afa15801561288a573d6000803e3d6000fd5b505050506040513d60208110156128a057600080fd5b50519050806128f0576040805162461bcd60e51b815260206004820152601760248201527653776565703a204e6f20746f6b656e2062616c616e636560481b604482015290519081900360640190fd5b6040805163a9059cbb60e01b81523360048201526024810183905290516001600160a01b0384169163a9059cbb9160448083019260209291908290030181600087803b15801561293f57600080fd5b505af1158015612953573d6000803e3d6000fd5b505050506040513d602081101561296957600080fd5b5050471561299f5760405133904780156108fc02916000818181858888f1935050505015801561299d573d6000803e3d6000fd5b505b6040805182815290516001600160a01b0384169133917f39a3bfd42aa3a6ab14fe516cd2417618c0b46203671179fa38a757f24f5d30c39181900360200190a35050565b6000612a2583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613178565b9392505050565b600082612a3b5750600061238f565b82820282848281612a4857fe5b0414612a255760405162461bcd60e51b81526004018080602001828103825260218152602001806136016021913960400191505060405180910390fd5b6000612a2583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061320f565b600082820183811015612a25576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600a546000906001600160a01b0316331480612b475750600b546001600160a01b031633145b612b825760405162461bcd60e51b815260040180806020018281038252602a8152602001806136c0602a913960400191505060405180910390fd5b81612b8f57506000612a25565b6004546060906001600160a01b03858116911614612bae576003612bb1565b60025b60ff1667ffffffffffffffff81118015612bca57600080fd5b50604051908082528060200260200182016040528015612bf4578160200160208202803683370190505b506004549091506001600160a01b0385811691161415612c7d5760045481516001600160a01b03909116908290600090612c2a57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110612c5857fe5b60200260200101906001600160a01b031690816001600160a01b031681525050612d05565b8381600081518110612c8b57fe5b6001600160a01b039283166020918202929092010152600454825191169082906001908110612cb657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508481600281518110612ce457fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b604080516370a0823160e01b815230600482015290516000916001600160a01b038816916370a0823191602480820192602092909190829003018186803b158015612d4f57600080fd5b505afa158015612d63573d6000803e3d6000fd5b505050506040513d6020811015612d7957600080fd5b5051600254909150612d9f906001600160a01b038781169116600063ffffffff612ef116565b600254612dbf906001600160a01b0387811691168663ffffffff612ef116565b600254604051635c11d79560e01b815260048101868152600060248301819052306064840181905261012c42016084850181905260a060448601908152885160a487015288516001600160a01b0390971696635c11d795968c968b9594939092909160c40190602080880191028083838b5b83811015612e49578181015183820152602001612e31565b505050509050019650505050505050600060405180830381600087803b158015612e7257600080fd5b505af1158015612e86573d6000803e3d6000fd5b505050506000612ee682886001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610d5b57600080fd5b979650505050505050565b801580612f77575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015612f4957600080fd5b505afa158015612f5d573d6000803e3d6000fd5b505050506040513d6020811015612f7357600080fd5b5051155b612fb25760405162461bcd60e51b81526004018080602001828103825260368152602001806137816036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526111a0908490613274565b8061300e576111a0565b604080516370a0823160e01b815230600482015290516000916001600160a01b038516916370a0823191602480820192602092909190829003018186803b15801561305857600080fd5b505afa15801561306c573d6000803e3d6000fd5b505050506040513d602081101561308257600080fd5b50519050808211156130ad576130a86001600160a01b038416858363ffffffff61332516565b6130c7565b6130c76001600160a01b038416858463ffffffff61332516565b50505050565b6001546001600160a01b038281169116141561311a5760405162461bcd60e51b81526004018080602001828103825260238152602001806135726023913960400191505060405180910390fd5b600180546001600160a01b038084166001600160a01b03199092169190911791829055604080519290911682525133917f434a2db650703b36c824e745330d6397cdaa9ee2cc891a4938ae853e1c50b68d919081900360200190a250565b600081848411156132075760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156131cc5781810151838201526020016131b4565b50505050905090810190601f1680156131f95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000818361325e5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156131cc5781810151838201526020016131b4565b50600083858161326a57fe5b0495945050505050565b60606132c9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166133779092919063ffffffff16565b8051909150156111a0578080602001905160208110156132e857600080fd5b50516111a05760405162461bcd60e51b815260040180806020018281038252602a815260200180613711602a913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526111a0908490613274565b6060613386848460008561338e565b949350505050565b6060824710156133cf5760405162461bcd60e51b81526004018080602001828103825260268152602001806135b66026913960400191505060405180910390fd5b6133d8856134df565b613429576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106134685780518252601f199092019160209182019101613449565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146134ca576040519150601f19603f3d011682016040523d82523d6000602084013e6134cf565b606091505b5091509150612ee68282866134e5565b3b151590565b606083156134f4575081612a25565b8251156135045782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156131cc5781810151838201526020016131b456fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536574476f7665726e616e63653a204e6f20676f7665726e616e6365206368616e6765536574526567756c61746f723a204e6f20526567756c61746f72206368616e6765416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536574416e795374616b653a204d757374206861766520416e795374616b652076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77416464426f6e646564526577617264733a2043616e6e6f742068617665207a65726f20626c6f636b20626f6e644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572416464426f6e646564526577617264733a2043616e6e6f7420616464207a65726f207265776172647353776565703a2043616e6e6f7420776974686472617720626c61636b6c697374656420746f6b656e5661756c743a204f6e6c7920416e795374616b6520616e6420526567756c61746f7220616c6c6f776564536574526567756c61746f723a204d757374206861766520526567756c61746f722076616c75655361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564536574556e69737761703a204d7573742073657420756e69737761702076616c7565536574526174653a2043616e6e6f742062652067726561746572207468616e20313030255361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365476f763a204f6e6c7920476f7665726e6f727300000000000000000000000000a26469706673582212200cd39e840f74a6b28d2d2743b54ab19f7eec11353920a627bb093e5d2e15b91b64736f6c63430006060033536574476f7665726e616e63653a204e6f20676f7665726e616e6365206368616e6765",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102535760003560e01c80638efecdda11610146578063c55c0c34116100c3578063eded3fda11610087578063eded3fda14610584578063ee1725461461058c578063f2bc79a314610594578063f2fde38b1461059c578063f887ea40146105c2578063fdcc7b08146105ca57610253565b8063c55c0c341461051a578063cde0a4f814610522578063d3917cd514610548578063d42e125414610550578063dd8fee141461057c57610253565b8063ab033ea91161010a578063ab033ea9146104ae578063afa99860146104d4578063b2d6b00414610502578063b5673f041461050a578063c45a01551461051257610253565b80638efecdda146104265780638fd3ab801461044c578063917f9737146104545780639f25cde71461045c578063a8031a1d1461048257610253565b806341c0e1b5116101d45780635aa6e675116101985780635aa6e675146103e0578063715018a6146103e85780637bef5a92146103f05780637cd07e47146104165780638da5cb5b1461041e57610253565b806341c0e1b514610379578063460d48a014610381578063463d7ac3146103ad5780634ad83dd7146103b5578063521adaf5146103d857610253565b806321603e8b1161021b57806321603e8b146102e557806323cf31181461031f57806337710aca146103455780633e50de30146103695780633fc8cef31461037157610253565b806301681a621461025857806302cb6b7f14610280578063039f3c981461029a578063144fa6d7146102a257806319983251146102c8575b600080fd5b61027e6004803603602081101561026e57600080fd5b50356001600160a01b03166105d2565b005b61028861068e565b60408051918252519081900360200190f35b610288610694565b61027e600480360360208110156102b857600080fd5b50356001600160a01b031661069a565b61027e600480360360208110156102de57600080fd5b5035610929565b61030b600480360360208110156102fb57600080fd5b50356001600160a01b0316610ad4565b604080519115158252519081900360200190f35b61027e6004803603602081101561033557600080fd5b50356001600160a01b0316610af2565b61034d610c7f565b604080516001600160a01b039092168252519081900360200190f35b61027e610c8e565b61034d61105c565b61027e61106b565b61027e6004803603604081101561039757600080fd5b506001600160a01b0381351690602001356110c6565b61034d6111a5565b61027e600480360360408110156103cb57600080fd5b50803590602001356111b4565b610288611418565b61034d61141e565b61027e61142d565b61027e6004803603602081101561040657600080fd5b50356001600160a01b03166114cf565b61034d6116b0565b61034d6116bf565b61027e6004803603602081101561043c57600080fd5b50356001600160a01b03166116ce565b61027e6119cd565b61034d611c4b565b61027e6004803603602081101561047257600080fd5b50356001600160a01b0316611c5a565b61027e6004803603604081101561049857600080fd5b506001600160a01b038135169060200135611ee9565b61027e600480360360208110156104c457600080fd5b50356001600160a01b0316611f79565b610288600480360360408110156104ea57600080fd5b506001600160a01b038135811691602001351661205d565b610288612395565b61028861239b565b61034d6123a1565b6102886123b0565b61027e6004803603602081101561053857600080fd5b50356001600160a01b03166123b6565b61034d612581565b61027e6004803603604081101561056657600080fd5b506001600160a01b038135169060200135612590565b61034d612699565b6102886126a8565b6102886126ae565b6102886126b4565b61027e600480360360208110156105b257600080fd5b50356001600160a01b03166126ba565b61034d6127b2565b61034d6127c1565b6105da6127d0565b6000546001600160a01b0390811691161461062a576040805162461bcd60e51b8152602060048201819052602482015260008051602061364f833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526009602052604090205460ff16156106825760405162461bcd60e51b81526004018080602001828103825260288152602001806136986028913960400191505060405180910390fd5b61068b816127d4565b50565b60105481565b600f5481565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b1580156106e557600080fd5b505afa1580156106f9573d6000803e3d6000fd5b505050506040513d602081101561070f57600080fd5b505110158061073657506107216116bf565b6001600160a01b0316336001600160a01b0316145b610775576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b6005546001600160a01b03828116911614156107d8576040805162461bcd60e51b815260206004820152601960248201527f536574546f6b656e3a204e6f20746f6b656e206368616e676500000000000000604482015290519081900360640190fd5b6001600160a01b038116610833576040805162461bcd60e51b815260206004820152601e60248201527f536574546f6b656e3a204d7573742073657420746f6b656e2076616c75650000604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b03838116918217909255600354600480546040805163e6a4390560e01b81529283019490945284166024820152915192169163e6a4390591604480820192602092909190829003018186803b1580156108a057600080fd5b505afa1580156108b4573d6000803e3d6000fd5b505050506040513d60208110156108ca57600080fd5b5051600780546001600160a01b039283166001600160a01b031990911617905560055460408051919092168152905133917f0b1186973f810894b87ab0bfbee422fddcaad21b46dc705a561451bbb6bac117919081900360200190a250565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b15801561097457600080fd5b505afa158015610988573d6000803e3d6000fd5b505050506040513d602081101561099e57600080fd5b50511015806109c557506109b06116bf565b6001600160a01b0316336001600160a01b0316145b610a04576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b601054811415610a55576040805162461bcd60e51b8152602060048201526017602482015276536574526174653a204e6f2072617465206368616e676560481b604482015290519081900360640190fd5b6103e8811115610a965760405162461bcd60e51b815260040180806020018281038252602481526020018061375d6024913960400191505060405180910390fd5b601081905560408051828152905133917f795d76dc4b36dc1b4d2a9a512fd59efc329dc639f747c5355cc50c7fad7a9ef2919081900360200190a250565b6001600160a01b031660009081526009602052604090205460ff1690565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b158015610b3d57600080fd5b505afa158015610b51573d6000803e3d6000fd5b505050506040513d6020811015610b6757600080fd5b5051101580610b8e5750610b796116bf565b6001600160a01b0316336001600160a01b0316145b610bcd576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b6001600160a01b038116610c28576040805162461bcd60e51b815260206004820152601f60248201527f5365744d69677261746f723a204e6f206d69677261746f72206368616e676500604482015290519081900360640190fd5b600c80546001600160a01b0383166001600160a01b03199091168117909155604080519182525133917f17356f011fa307735bd27bcbcd4ee385789d5155c6e44c093a1936e387f62ae5919081900360200190a250565b6005546001600160a01b031681565b600a546001600160a01b0316331480610cb15750600b546001600160a01b031633145b610cec5760405162461bcd60e51b815260040180806020018281038252602a8152602001806136c0602a913960400191505060405180910390fd5b6011544311610cfa5761105a565b600d54601554600554604080516370a0823160e01b8152306004820152905160009485948594610d9f949293610d93936001600160a01b03909216916370a08231916024808301926020929190829003018186803b158015610d5b57600080fd5b505afa158015610d6f573d6000803e3d6000fd5b505050506040513d6020811015610d8557600080fd5b50519063ffffffff6129e316565b9063ffffffff6129e316565b90508015610e08576000610dd06103e8610dc460105485612a2c90919063ffffffff16565b9063ffffffff612a8516565b9050610de2848263ffffffff612ac716565b9350610e04610df7838363ffffffff6129e316565b849063ffffffff612ac716565b9250505b600d5415610ee3576000610e27601154436129e390919063ffffffff16565b9050600f54811115610e385750600f545b600e54600090610e4e908363ffffffff612a2c16565b9050600d54811115610e5f5750600d545b6000610e7c6103e8610dc460105485612a2c90919063ffffffff16565b9050610e8e868263ffffffff612ac716565b9550610eb0610ea3838363ffffffff6129e316565b869063ffffffff612ac716565b600d54909550610ec6908363ffffffff6129e316565b600d55600f54610edc908463ffffffff6129e316565b600f555050505b82158015610eef575081155b15610efc5750505061105a565b8215610f6857600a5460408051631d3793b160e21b81526004810186905290516001600160a01b03909216916374de4ec49160248082019260009290919082900301818387803b158015610f4f57600080fd5b505af1158015610f63573d6000803e3d6000fd5b505050505b8115610fd457600b5460408051631d3793b160e21b81526004810185905290516001600160a01b03909216916374de4ec49160248082019260009290919082900301818387803b158015610fbb57600080fd5b505af1158015610fcf573d6000803e3d6000fd5b505050505b43601155601554610ffd908390610ff1908663ffffffff612ac716565b9063ffffffff612ac716565b601555601454611019908390610ff1908663ffffffff612ac716565b6014556040805184815260208101849052815133927fe4e801442ed461792c0bdfa7f5c25444d391d67d68422437bd9005796c67cb23928290030190a25050505b565b6004546001600160a01b031681565b6110736127d0565b6000546001600160a01b039081169116146110c3576040805162461bcd60e51b8152602060048201819052602482015260008051602061364f833981519152604482015290519081900360640190fd5b33ff5b600a546001600160a01b03163314806110e95750600b546001600160a01b031633145b6111245760405162461bcd60e51b815260040180806020018281038252602a8152602001806136c0602a913960400191505060405180910390fd5b60055460009061113e906001600160a01b03168484612b21565b905080156111a057601254611159908263ffffffff612ac716565b601255604080518381526020810183905281516001600160a01b038616927f8c4b0799b6ce686b2d7a9e4d004a11a6cdddf122720ad6663cefe13a25b66c0a928290030190a25b505050565b6008546001600160a01b031681565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b1580156111ff57600080fd5b505afa158015611213573d6000803e3d6000fd5b505050506040513d602081101561122957600080fd5b5051101580611250575061123b6116bf565b6001600160a01b0316336001600160a01b0316145b61128f576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b600082116112ce5760405162461bcd60e51b815260040180806020018281038252602981526020018061366f6029913960400191505060405180910390fd5b6000811161130d5760405162461bcd60e51b815260040180806020018281038252602d815260200180613622602d913960400191505060405180910390fd5b600d54611320908363ffffffff612ac716565b600d55600f54611336908263ffffffff612ac716565b600f819055600d5461134d9163ffffffff612a8516565b600e5543601155600554604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156113ae57600080fd5b505af11580156113c2573d6000803e3d6000fd5b505050506040513d60208110156113d857600080fd5b50506040805183815260208101839052815133927f029435536d4df0bc1b6615a8ed651f37237d6a5ffb3d7dcea44a2d4dd93c3bcb928290030190a25050565b600d5481565b6001546001600160a01b031681565b6114356127d0565b6000546001600160a01b03908116911614611485576040805162461bcd60e51b8152602060048201819052602482015260008051602061364f833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b15801561151a57600080fd5b505afa15801561152e573d6000803e3d6000fd5b505050506040513d602081101561154457600080fd5b505110158061156b57506115566116bf565b6001600160a01b0316336001600160a01b0316145b6115aa576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b600a546001600160a01b038281169116141561160d576040805162461bcd60e51b815260206004820152601f60248201527f536574416e795374616b653a204e6f20416e795374616b65206368616e676500604482015290519081900360640190fd5b6001600160a01b0381166116525760405162461bcd60e51b81526004018080602001828103825260258152602001806135dc6025913960400191505060405180910390fd5b600a80546001600160a01b038084166001600160a01b03199092169190911791829055604080519290911682525133917fd969078c09d4ed45c51e02eab46ee56dc0ccd5744bfb8c726ee7d2d58883df71919081900360200190a250565b600c546001600160a01b031681565b6000546001600160a01b031690565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b15801561171957600080fd5b505afa15801561172d573d6000803e3d6000fd5b505050506040513d602081101561174357600080fd5b505110158061176a57506117556116bf565b6001600160a01b0316336001600160a01b0316145b6117a9576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b6002546001600160a01b038281169116141561180c576040805162461bcd60e51b815260206004820152601d60248201527f536574556e69737761703a204e6f20756e6973776170206368616e6765000000604482015290519081900360640190fd5b6001600160a01b0381166118515760405162461bcd60e51b815260040180806020018281038252602281526020018061373b6022913960400191505060405180910390fd5b600280546001600160a01b0319166001600160a01b038381169190911791829055604080516315ab88c960e31b81529051929091169163ad5c464891600480820192602092909190829003018186803b1580156118ad57600080fd5b505afa1580156118c1573d6000803e3d6000fd5b505050506040513d60208110156118d757600080fd5b5051600480546001600160a01b0319166001600160a01b039283161781556002546040805163c45a015560e01b81529051919093169263c45a01559281810192602092909190829003018186803b15801561193157600080fd5b505afa158015611945573d6000803e3d6000fd5b505050506040513d602081101561195b57600080fd5b5051600380546001600160a01b039283166001600160a01b03199091161790819055600254600454604080519285168352908416602083015291909216828201525133917f0cded593bf24267de84b7b3800bf9eb31ddb3c449fff75a64b1232bb7738d6df919081900360600190a250565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b158015611a1857600080fd5b505afa158015611a2c573d6000803e3d6000fd5b505050506040513d6020811015611a4257600080fd5b5051101580611a695750611a546116bf565b6001600160a01b0316336001600160a01b0316145b611aa8576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b600c546001600160a01b0316611b00576040805162461bcd60e51b8152602060048201526018602482015277135a59dc985d194e88139bc81b5a59dc985d1bdc881cd95d60421b604482015290519081900360640190fd5b600554604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611b4b57600080fd5b505afa158015611b5f573d6000803e3d6000fd5b505050506040513d6020811015611b7557600080fd5b5051600c54600554919250611b9d916001600160a01b0390811691168363ffffffff612ef116565b600c60009054906101000a90046001600160a01b03166001600160a01b03166398c6e7606040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611bed57600080fd5b505af1158015611c01573d6000803e3d6000fd5b5050600c54604080516001600160a01b03929092168252513393507f2a05bb717043f3a794e94382bf63f2e275ecafc41be9b63c34f16d58da9822ca92509081900360200190a250565b6006546001600160a01b031681565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b158015611ca557600080fd5b505afa158015611cb9573d6000803e3d6000fd5b505050506040513d6020811015611ccf57600080fd5b5051101580611cf65750611ce16116bf565b6001600160a01b0316336001600160a01b0316145b611d35576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b6006546001600160a01b0382811691161415611d98576040805162461bcd60e51b815260206004820152601b60248201527f536574506f696e74733a204e6f20706f696e7473206368616e67650000000000604482015290519081900360640190fd5b6001600160a01b038116611df3576040805162461bcd60e51b815260206004820181905260248201527f536574506f696e74733a204d7573742073657420706f696e74732076616c7565604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b03838116918217909255600354600480546040805163e6a4390560e01b81529283019490945284166024820152915192169163e6a4390591604480820192602092909190829003018186803b158015611e6057600080fd5b505afa158015611e74573d6000803e3d6000fd5b505050506040513d6020811015611e8a57600080fd5b5051600880546001600160a01b039283166001600160a01b031990911617905560065460408051919092168152905133917f51a2b49da00e06b51910260db68d6491809bb5755e305a6f469fb89e8b5e99d5919081900360200190a250565b600a546001600160a01b0316331480611f0c5750600b546001600160a01b031633145b611f475760405162461bcd60e51b815260040180806020018281038252602a8152602001806136c0602a913960400191505060405180910390fd5b600554611f5f9083906001600160a01b031683613004565b601554611f72908263ffffffff6129e316565b6015555050565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b158015611fc457600080fd5b505afa158015611fd8573d6000803e3d6000fd5b505050506040513d6020811015611fee57600080fd5b505110158061201557506120006116bf565b6001600160a01b0316336001600160a01b0316145b612054576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b61068b816130cd565b6004546000906001600160a01b03848116911614156120855750670de0b6b3a764000061238f565b60006001600160a01b0383161561209c578261209e565b835b9050600080600460009054906101000a90046001600160a01b03166001600160a01b0316836001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156120fb57600080fd5b505afa15801561210f573d6000803e3d6000fd5b505050506040513d602081101561212557600080fd5b50516001600160a01b031614156121b757826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561216f57600080fd5b505afa158015612183573d6000803e3d6000fd5b505050506040513d606081101561219957600080fd5b5080516020909101516001600160701b039182169350169050612234565b826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156121f057600080fd5b505afa158015612204573d6000803e3d6000fd5b505050506040513d606081101561221a57600080fd5b5080516020909101516001600160701b0390811693501690505b80612245576000935050505061238f565b6001600160a01b0385166122dd576122d3866001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561228f57600080fd5b505afa1580156122a3573d6000803e3d6000fd5b505050506040513d60208110156122b957600080fd5b5051610dc484671bc16d674ec8000063ffffffff612a2c16565b935050505061238f565b6000866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561231857600080fd5b505afa15801561232c573d6000803e3d6000fd5b505050506040513d602081101561234257600080fd5b505160ff166024039050600061236684610dc485600a86900a63ffffffff612a2c16565b90506123876ec097ce7bc90715b34b9f10000000008263ffffffff612a8516565b955050505050505b92915050565b60125481565b60135481565b6003546001600160a01b031681565b600e5481565b60015460408051630f9e0f3360e31b815233600482015290516002926001600160a01b031691637cf07998916024808301926020929190829003018186803b15801561240157600080fd5b505afa158015612415573d6000803e3d6000fd5b505050506040513d602081101561242b57600080fd5b5051101580612452575061243d6116bf565b6001600160a01b0316336001600160a01b0316145b612491576040805162461bcd60e51b815260206004820152601360248201526000805160206137b7833981519152604482015290519081900360640190fd5b600b546001600160a01b03828116911614156124de5760405162461bcd60e51b81526004018080602001828103825260218152602001806135956021913960400191505060405180910390fd5b6001600160a01b0381166125235760405162461bcd60e51b81526004018080602001828103825260278152602001806136ea6027913960400191505060405180910390fd5b600b80546001600160a01b038084166001600160a01b03199092169190911791829055604080519290911682525133917ff489dcedf765e00963d6c13903d580a27ea806656ce92cd0e731bf4a902f5caf919081900360200190a250565b600a546001600160a01b031681565b600a546001600160a01b03163314806125b35750600b546001600160a01b031633145b6125ee5760405162461bcd60e51b815260040180806020018281038252602a8152602001806136c0602a913960400191505060405180910390fd5b600654600090612608906001600160a01b03168484612b21565b600b549091506001600160a01b031633141561263557601554612631908363ffffffff6129e316565b6015555b80156111a05760135461264e908263ffffffff612ac716565b601355604080518381526020810183905281516001600160a01b038616927f269e523b6b004ceb6676e631e6a7f39a9563dce786272ca120df34860c030081928290030190a2505050565b600b546001600160a01b031681565b60155481565b60145481565b60115481565b6126c26127d0565b6000546001600160a01b03908116911614612712576040805162461bcd60e51b8152602060048201819052602482015260008051602061364f833981519152604482015290519081900360640190fd5b6001600160a01b0381166127575760405162461bcd60e51b815260040180806020018281038252602681526020018061354c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031681565b6007546001600160a01b031681565b3390565b6127dc6127d0565b6000546001600160a01b0390811691161461282c576040805162461bcd60e51b8152602060048201819052602482015260008051602061364f833981519152604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b15801561287657600080fd5b505afa15801561288a573d6000803e3d6000fd5b505050506040513d60208110156128a057600080fd5b50519050806128f0576040805162461bcd60e51b815260206004820152601760248201527653776565703a204e6f20746f6b656e2062616c616e636560481b604482015290519081900360640190fd5b6040805163a9059cbb60e01b81523360048201526024810183905290516001600160a01b0384169163a9059cbb9160448083019260209291908290030181600087803b15801561293f57600080fd5b505af1158015612953573d6000803e3d6000fd5b505050506040513d602081101561296957600080fd5b5050471561299f5760405133904780156108fc02916000818181858888f1935050505015801561299d573d6000803e3d6000fd5b505b6040805182815290516001600160a01b0384169133917f39a3bfd42aa3a6ab14fe516cd2417618c0b46203671179fa38a757f24f5d30c39181900360200190a35050565b6000612a2583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613178565b9392505050565b600082612a3b5750600061238f565b82820282848281612a4857fe5b0414612a255760405162461bcd60e51b81526004018080602001828103825260218152602001806136016021913960400191505060405180910390fd5b6000612a2583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061320f565b600082820183811015612a25576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600a546000906001600160a01b0316331480612b475750600b546001600160a01b031633145b612b825760405162461bcd60e51b815260040180806020018281038252602a8152602001806136c0602a913960400191505060405180910390fd5b81612b8f57506000612a25565b6004546060906001600160a01b03858116911614612bae576003612bb1565b60025b60ff1667ffffffffffffffff81118015612bca57600080fd5b50604051908082528060200260200182016040528015612bf4578160200160208202803683370190505b506004549091506001600160a01b0385811691161415612c7d5760045481516001600160a01b03909116908290600090612c2a57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110612c5857fe5b60200260200101906001600160a01b031690816001600160a01b031681525050612d05565b8381600081518110612c8b57fe5b6001600160a01b039283166020918202929092010152600454825191169082906001908110612cb657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508481600281518110612ce457fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b604080516370a0823160e01b815230600482015290516000916001600160a01b038816916370a0823191602480820192602092909190829003018186803b158015612d4f57600080fd5b505afa158015612d63573d6000803e3d6000fd5b505050506040513d6020811015612d7957600080fd5b5051600254909150612d9f906001600160a01b038781169116600063ffffffff612ef116565b600254612dbf906001600160a01b0387811691168663ffffffff612ef116565b600254604051635c11d79560e01b815260048101868152600060248301819052306064840181905261012c42016084850181905260a060448601908152885160a487015288516001600160a01b0390971696635c11d795968c968b9594939092909160c40190602080880191028083838b5b83811015612e49578181015183820152602001612e31565b505050509050019650505050505050600060405180830381600087803b158015612e7257600080fd5b505af1158015612e86573d6000803e3d6000fd5b505050506000612ee682886001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610d5b57600080fd5b979650505050505050565b801580612f77575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b158015612f4957600080fd5b505afa158015612f5d573d6000803e3d6000fd5b505050506040513d6020811015612f7357600080fd5b5051155b612fb25760405162461bcd60e51b81526004018080602001828103825260368152602001806137816036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526111a0908490613274565b8061300e576111a0565b604080516370a0823160e01b815230600482015290516000916001600160a01b038516916370a0823191602480820192602092909190829003018186803b15801561305857600080fd5b505afa15801561306c573d6000803e3d6000fd5b505050506040513d602081101561308257600080fd5b50519050808211156130ad576130a86001600160a01b038416858363ffffffff61332516565b6130c7565b6130c76001600160a01b038416858463ffffffff61332516565b50505050565b6001546001600160a01b038281169116141561311a5760405162461bcd60e51b81526004018080602001828103825260238152602001806135726023913960400191505060405180910390fd5b600180546001600160a01b038084166001600160a01b03199092169190911791829055604080519290911682525133917f434a2db650703b36c824e745330d6397cdaa9ee2cc891a4938ae853e1c50b68d919081900360200190a250565b600081848411156132075760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156131cc5781810151838201526020016131b4565b50505050905090810190601f1680156131f95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000818361325e5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156131cc5781810151838201526020016131b4565b50600083858161326a57fe5b0495945050505050565b60606132c9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166133779092919063ffffffff16565b8051909150156111a0578080602001905160208110156132e857600080fd5b50516111a05760405162461bcd60e51b815260040180806020018281038252602a815260200180613711602a913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526111a0908490613274565b6060613386848460008561338e565b949350505050565b6060824710156133cf5760405162461bcd60e51b81526004018080602001828103825260268152602001806135b66026913960400191505060405180910390fd5b6133d8856134df565b613429576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106134685780518252601f199092019160209182019101613449565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146134ca576040519150601f19603f3d011682016040523d82523d6000602084013e6134cf565b606091505b5091509150612ee68282866134e5565b3b151590565b606083156134f4575081612a25565b8251156135045782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156131cc5781810151838201526020016131b456fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536574476f7665726e616e63653a204e6f20676f7665726e616e6365206368616e6765536574526567756c61746f723a204e6f20526567756c61746f72206368616e6765416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536574416e795374616b653a204d757374206861766520416e795374616b652076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77416464426f6e646564526577617264733a2043616e6e6f742068617665207a65726f20626c6f636b20626f6e644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572416464426f6e646564526577617264733a2043616e6e6f7420616464207a65726f207265776172647353776565703a2043616e6e6f7420776974686472617720626c61636b6c697374656420746f6b656e5661756c743a204f6e6c7920416e795374616b6520616e6420526567756c61746f7220616c6c6f776564536574526567756c61746f723a204d757374206861766520526567756c61746f722076616c75655361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564536574556e69737761703a204d7573742073657420756e69737761702076616c7565536574526174653a2043616e6e6f742062652067726561746572207468616e20313030255361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365476f763a204f6e6c7920476f7665726e6f727300000000000000000000000000a26469706673582212200cd39e840f74a6b28d2d2743b54ab19f7eec11353920a627bb093e5d2e15b91b64736f6c63430006060033",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4083,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3878,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "governance",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 7480,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "router",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 7482,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "factory",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 7484,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "weth",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 7486,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "DeFiatToken",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 7488,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "DeFiatPoints",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 7490,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "DeFiatTokenLp",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 7492,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "DeFiatPointsLp",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 7496,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "_blacklistedAdminWithdraw",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2756,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "anystake",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 2758,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "regulator",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 2760,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "migrator",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 2762,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "bondedRewards",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 2764,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "bondedRewardsPerBlock",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 2766,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "bondedRewardsBlocksRemaining",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 2768,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "distributionRate",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 2770,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "lastDistributionBlock",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 2772,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "totalTokenBuybackAmount",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 2774,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "totalPointsBuybackAmount",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 2776,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "totalRewardsDistributed",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 2778,
        "contract": "contracts/AnyStakeVault.sol:AnyStakeVault",
        "label": "pendingRewards",
        "offset": 0,
        "slot": "21",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}